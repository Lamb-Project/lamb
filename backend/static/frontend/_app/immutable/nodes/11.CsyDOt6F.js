import{t as Q,h as _e,e as xe,a as h,s as c,r as he,d as ye,n as ke,b as Be}from"../chunks/C82hPXC8.js";import{p as Ce,o as $e,c as r,s as n,t as g,a as Ke,i as s,a6 as q,a7 as Pe,j as u,r as t,f as Ee}from"../chunks/DZNCS3vC.js";import{s as H}from"../chunks/D_NCb2YC.js";import{i as V}from"../chunks/fI70I6vP.js";import{s as F,r as Le}from"../chunks/D5v_xaba.js";import{b as G}from"../chunks/ei6fuu5i.js";import{b as ze}from"../chunks/TETYgnKo.js";import{p as J}from"../chunks/B_zbZ6nJ.js";import{s as De,a as Me}from"../chunks/CVH_3kCa.js";import{$ as je,a as Ae}from"../chunks/weotW1oH.js";import{g as U}from"../chunks/JSp2UL00.js";import{c as qe}from"../chunks/BhMXpYJc.js";function He(){U("/knowledgebases")}var Ie=Q('<div class="bg-red-50 p-4 rounded-md mb-6"><div class="flex"><div class="flex-shrink-0"><svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path></svg></div> <div class="ml-3"><p class="text-sm font-medium text-red-800"> </p></div></div></div>'),Ne=ke('<svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> ',1),Re=Q('<div class="container mx-auto px-4 py-8"><h1 class="text-3xl font-bold mb-8 text-gray-800"> </h1> <div class="bg-white shadow-md rounded-lg overflow-hidden border border-gray-200"><div class="p-5 border-b border-gray-200"><h2 class="text-xl font-semibold text-gray-800"> </h2></div> <div class="p-5"><!> <form class="space-y-6"><div><label for="name" class="block text-sm font-medium text-gray-700"> </label> <input type="text" id="name" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-[#2271b3] focus:border-[#2271b3]"></div> <div><label for="description" class="block text-sm font-medium text-gray-700"> </label> <textarea id="description" rows="3" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-[#2271b3] focus:border-[#2271b3]"></textarea></div> <div><label for="access_control" class="block text-sm font-medium text-gray-700"> </label> <select id="access_control" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-[#2271b3] focus:border-[#2271b3] rounded-md"><option> </option><option> </option></select> <p class="mt-1 text-sm text-gray-500"> </p></div> <div class="flex justify-end space-x-3 pt-4"><button type="button" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"> </button> <button type="submit" class="px-4 py-2 bg-[#2271b3] text-white rounded-md hover:bg-[#195a91] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#2271b3] flex items-center disabled:opacity-50 disabled:cursor-not-allowed"><!></button></div></form></div></div></div>');function Ze(W,X){Ce(X,!0);const[Y,Z]=De(),l=()=>Me(je,"$_",Y);let d=J({name:"",description:"",access_control:"private"}),f=q(!1),m=q(""),o=q(!1);$e(()=>Ae.subscribe(a=>{a&&u(o,!0)}));async function ee(){if(!d.name.trim()){u(m,"Knowledge base name is required");return}u(f,!0),u(m,"");try{const e=d.description.trim(),a={name:d.name.trim(),description:e,metadata:{description:e,access_control:d.access_control},access_control:d.access_control};console.log("Knowledge base data being sent:",a);const i=await qe(a);if(console.log("Created knowledge base:",H(i)),i){const p=i.id||"";if(p)U(`/knowledgebases/${p}`);else throw new Error("Invalid response: missing id")}else throw new Error("Invalid response format")}catch(e){console.error("Error creating knowledge base:",H(e)),u(m,"An unknown error occurred");try{const a=e;a&&a.message&&u(m,J(a.message))}catch(a){console.error("Error extracting error message:",H(a))}}finally{u(f,!1)}}var y=Re();_e(e=>{g(a=>Pe.title=a,[()=>s(o)?l()("knowledgeBases.createPageTitle"):"Create Knowledge Base"])});var k=r(y),ae=r(k,!0);t(k);var I=n(k,2),B=r(I),N=r(B),re=r(N,!0);t(N),t(B);var R=n(B,2),T=r(R);{var te=e=>{var a=Ie(),i=r(a),v=n(r(i),2),p=r(v),A=r(p,!0);t(p),t(v),t(i),t(a),g(()=>c(A,s(m))),h(e,a)};V(T,e=>{s(m)&&e(te)})}var C=n(T,2),$=r(C),K=r($),se=r(K);t(K);var P=n(K,2);Le(P),t($);var E=n($,2),L=r(E),oe=r(L,!0);t(L);var z=n(L,2);he(z),t(E);var D=n(E,2),M=r(D),le=r(M,!0);t(M);var w=n(M,2),b=r(w);b.value=(b.__value="private")==null?"":"private";var ne=r(b,!0);t(b);var _=n(b);_.value=(_.__value="public")==null?"":"public";var ie=r(_,!0);t(_),t(w);var O=n(w,2),ce=r(O,!0);t(O),t(D);var S=n(D,2),x=r(S);x.__click=[He];var de=r(x,!0);t(x);var j=n(x,2),ve=r(j);{var pe=e=>{var a=Ne(),i=n(Ee(a),1,!0);g(v=>c(i,v),[()=>s(o)?l()("knowledgeBases.creating"):"Creating..."]),h(e,a)},ue=e=>{var a=Be();g(i=>c(a,i),[()=>s(o)?l()("knowledgeBases.create"):"Create Knowledge Base"]),h(e,a)};V(ve,e=>{s(f)?e(pe):e(ue,!1)})}t(j),t(S),t(C),t(R),t(I),t(y),g((e,a,i,v,p,A,me,be,ge,fe,we)=>{c(ae,e),c(re,a),c(se,`${i??""} *`),F(P,"placeholder",v),c(oe,p),F(z,"placeholder",A),c(le,me),c(ne,be),c(ie,ge),c(ce,fe),c(de,we),j.disabled=s(f)},[()=>s(o)?l()("knowledgeBases.createPageTitle"):"Create New Knowledge Base",()=>s(o)?l()("knowledgeBases.createKnowledgeBase"):"Create Knowledge Base",()=>s(o)?l()("knowledgeBases.name"):"Name",()=>s(o)?l()("knowledgeBases.namePlaceholder"):"Enter knowledge base name",()=>s(o)?l()("knowledgeBases.description"):"Description",()=>s(o)?l()("knowledgeBases.descriptionPlaceholder"):"Enter a description for this knowledge base",()=>s(o)?l()("knowledgeBases.accessControl"):"Access Control",()=>s(o)?l()("knowledgeBases.private"):"Private",()=>s(o)?l()("knowledgeBases.public"):"Public",()=>s(o)?l()("knowledgeBases.accessControlHelp"):"Private knowledge bases are only accessible by you, while public ones can be accessed by other users.",()=>s(o)?l()("knowledgeBases.cancel"):"Cancel"]),xe("submit",C,e=>{e.preventDefault(),ee()}),G(P,()=>d.name,e=>d.name=e),G(z,()=>d.description,e=>d.description=e),ze(w,()=>d.access_control,e=>d.access_control=e),h(W,y),Ke(),Z()}ye(["click"]);export{Ze as component};
